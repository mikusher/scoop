# Author: Luis Amilcar Tavares

# Settings and configurations that are common for all containers
x-superset-common: &superset-common
  image: amancevice/superset:2.0.0
  env_file:
    - docker/config/superset_database.env
    - docker/config/superset_container.env
  depends_on:
    - db
    - redis
    - etl_app
  volumes:
    - ./docker/services/superset/docker-init.sh:/app/docker-init.sh
    - ./docker/euro-dashboard.json:/app/euro-dashboard.json
    - ./docker/externals.yml:/app/externals.yml
    - ./docker/pythonpath_dev:/app/pythonpath
    - superset_home:/app/superset_home

x-minio-common: &minio-common
  image: quay.io/minio/minio:RELEASE.2022-08-13T21-54-44Z
  command: server --console-address ":9001" http://minio{1...2}/data{1...2}
  expose:
    - "9000"
    - "9001"
  env_file: docker/config/minio.env
  restart: unless-stopped
  healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
    interval: 30s
    timeout: 20s
    retries: 3


version: "3.7"

services:
  ofelia:
    image: mcuadros/ofelia:latest
    restart: always
    container_name: ofelia
    depends_on:
      - etl_app
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    labels:
      ofelia.enabled: "true"
      ofelia.job-run.app.schedule: "0 0 21 * * TUE,FRI" # * * 21 * 2
      ofelia.job-run.app.container: "etl-app"

  etl_app:
    image: etl-app
    container_name: etl_app
    user: user
    env_file: docker/config/etl.env
    command: [ "python", "./etl/etl_app.py", "etl" ]
    build:
      context: .
      dockerfile: millennium/Dockerfile
    volumes:
      - ./etl:/etl-app
    depends_on:
      - "db"
      - "pgadmin"
  #  labels:
  #    ofelia.enabled: "true"
  #    ofelia.job-exec.etl-app.schedule: "@every 10s"
  #    ofelia.job-exec.etl-app.command: "pwd"

  db:
    image: postgres:11-alpine
    container_name: db
    env_file: docker/config/postgres.env
    command: [ "postgres", "-c", "config_file=/etc/postgresql/postgresql.conf", "-c", "hba_file=/etc/postgresql/pg_hba.conf" ]
    ports:
      - "5432:5432"
    restart: unless-stopped
    volumes:
      - db_home:/var/lib/postgresql/data
      - ./docker/postgresqlconfig/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./docker/postgresqlconfig/pg_hba.conf:/etc/postgresql/pg_hba.conf
      - ./docker/services/postgres/init-user-db.sql:/docker-entrypoint-initdb.d/init-user-db.sql

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    env_file: docker/config/pgadmin.env
    ports:
      - '5050:80'
    restart: unless-stopped
    depends_on:
      - "db"
    volumes:
      - pgadmin:/root/.pgadmin

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - '127.0.0.1:6379:6379'
    volumes:
      - redis:/data

  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: redis_commander
    restart: unless-stopped
    env_file: docker/config/redis_command.env
    ports:
      - '8081:8081'
    depends_on:
      - redis

  superset:
    <<: *superset-common
    container_name: superset_app
    command: [ "flask", "run", "-p", "8088", "--with-threads", "--reload", "--debugger", "--host=0.0.0.0" ]
    restart: unless-stopped
    ports:
      - "8088:8088"

  superset-init:
    <<: *superset-common
    container_name: superset_init
    command: ["/app/docker-init.sh"]
    user: "root"

  # Model Storage - starts 2 docker containers running minio server instances.
  # using nginx reverse proxy, load balancing, you can access it through port 9000.
  minio1:
    <<: *minio-common
    hostname: minio1
    container_name: minio1
    volumes:
      - data1-1:/data1
      - data1-2:/data2

  minio2:
    <<: *minio-common
    hostname: minio2
    container_name: minio2
    volumes:
      - data2-1:/data1
      - data2-2:/data2

  nginx:
    image: nginx:1.19.2-alpine
    container_name: nginx
    hostname: nginx
    volumes:
      - ./docker/services/minio/nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "9000:9000"
      - "9001:9001"
    depends_on:
      - minio1
      - minio2

  # Admin Overview
  portainer:
    container_name: "portainer-container"
    restart: "always"
    image: portainer/portainer
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_volume:/data
    ports:
      - "9090:9000"
    command: -H unix:///var/run/docker.sock

volumes:
  db_home:
    external: false
  pgadmin:
    external: false
  redis:
    external: false
  superset_home:
    external: false
  portainer_volume:
    external: false
  minio_volume:
    external: false
  data1-1:
  data1-2:
  data2-1:
  data2-2: